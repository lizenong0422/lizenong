/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.eventmanage;

import java.io.File;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whu.tools.DBTools;
import com.whu.tools.SystemConstant;
import com.whu.web.common.SystemShare;
import com.whu.web.eventbean.SurveyReportBean;

/** 
 * MyEclipse Struts
 * Creation date: 02-19-2014
 * 
 * XDoclet definition:
 * @struts.action path="/surveyReportAction" name="surveyReportForm" parameter="method" scope="request" validate="true"
 */
public class SurveyReportAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 * @throws IOException 
	 */
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		SurveyReportForm surveyReportForm = (SurveyReportForm) form;
		String reportID = surveyReportForm.getReportID();
		
		String time = SystemShare.GetNowTime("yyyy-MM-dd");
		DBTools dbTools = new DBTools();
		/*
		
		//将事件主状态修改为”处理讨论中“
		String sql = "update TB_REPORTINFO set STATUS='" + SystemConstant.SS_HANDLEING + "',LASTTIME='" + time + "' where REPORTID='" + reportID + "'";
		boolean result = dbTools.insertItem(sql);
		*/		
		
		String filePath = request.getSession().getServletContext().getRealPath("/")+"/attachment/";
		String loginName = (String)request.getSession().getAttribute("LoginName");
		String path1 = request.getSession().getServletContext().getRealPath("/") + "/temp/" + loginName + "/";
		String path2 = filePath + reportID;
		//获得服务器的IP地址路径，存放在数据库中，便于下载
		String relDirectory = "attachment" + "/" + reportID;
		String createName = (String)request.getSession().getAttribute("UserName");
		boolean result = SystemShare.IOCopy(path1, path2, relDirectory, createName);
		
		String reportName = (String)request.getSession().getAttribute("SurveyReportName");
		if(reportName != null && !reportName.equals(""))
		{
			//String suveryReportPath = path2 + "\\" + reportName;
			String tempsql="select * from TB_SURVEYREPORT where REPORTID=?";
			String[] tempParams = new String[]{reportID};
			String sql="";
			String[] params = new String[0];
			//String sql = "if not exists (select * from TB_SURVEYREPORT where REPORTID='" + reportID + "') insert into TB_SURVEYREPORT(REPORTID, FILENAME) values('" + reportID + "', '" + reportName + "') else update TB_SURVEYREPORT set FILENAME='" + reportName + "' where REPORTID='" + reportID + "'";
			boolean flag=dbTools.queryISEXIST(tempsql, tempParams);
			if(flag)
			{
				sql="insert into TB_SURVEYREPORT(REPORTID, FILENAME) values(?, ?)";
				params = new String[]{reportID, reportName};
			}
			else
			{
				sql="update TB_SURVEYREPORT set FILENAME=? where REPORTID=?";
				params = new String[]{reportName, reportID};
			}
			request.getSession().setAttribute("SurveyReportName", "");
			result = dbTools.insertItem(sql, params);
		}
		
		
		if(result)
		{
			String describe = time + "," + createName + "编辑调查报告";
			//插入处理过程到数据库中
			dbTools.InsertHandleProcess(reportID, createName, SystemConstant.HP_SURVEYREPORT, SystemConstant.SS_SURVEYING, SystemConstant.LCT_DCBG, describe);
			//dbTools.InsertFKInfo(reportID, SystemConstant.FK_HANDLING, time);
		}
		
		PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		if(result)
		{
			json.put("statusCode", 200);
			json.put("message", "调查报告保存成功！");
			json.put("callbackType", "closeCurrent");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "调查报告保存失败！");
		}
		out.write(json.toString());
		out.flush();
		out.close();
		return null;
	}
	/**
	 * 生成或编辑调查报告
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 */
	public ActionForward surveyReport(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		SurveyReportForm surveyReportForm = (SurveyReportForm) form;
		String reportID = surveyReportForm.getReportID();
		String templatePath = "";
		SurveyReportBean srb = new SurveyReportBean();
		DBTools dbTools = new DBTools();
		String filePath = dbTools.querySingleData("TB_SURVEYREPORT", "FILENAME", "REPORTID", reportID);
		String userName = (String)request.getSession().getAttribute("UserName");
		if(!filePath.equals(""))
		{
			String dicPath = request.getSession().getServletContext().getRealPath("/")+"/attachment/";
			String tempFilePath = dicPath + filePath;
			if((new File(tempFilePath)).exists())//如果存在，则得到路径
			{
				templatePath = SystemConstant.GetServerPath() + "/attachment/" +  filePath;
				request.setAttribute("IsEdit", "1");
			}
			else//不存在，则继续使用模板，例如：人工删除或系统出错
			{
				request.setAttribute("IsEdit", "0");
				templatePath = SystemConstant.GetServerPath() + "/web/template/dcbg.doc";
			}
		}
		else
		{
			templatePath = SystemConstant.GetServerPath() + "/web/template/dcbg.doc";
			request.setAttribute("IsEdit", "0");
			
			String time = SystemShare.GetNowTime("yyyy-MM-dd");
			String describe = time + "," + userName + "编辑调查报告";
			//插入处理过程到数据库中
			dbTools.InsertHandleProcess(reportID, userName, SystemConstant.HP_SURVEYREPORT, SystemConstant.SS_SURVEYING, SystemConstant.LCT_DCBG, describe);
			//dbTools.InsertFKInfo(reportID, SystemConstant.FK_HANDLING, time);
		}
		dbTools.insertLogInfo(userName, SystemConstant.LOG_SURVEYREPORT, "编辑调查报告，事件编号为：" + reportID, request.getRemoteAddr());
		
		request.setAttribute("ReportID", reportID);
		request.setAttribute("ServerPath", SystemConstant.GetServerPath());
		request.setAttribute("templatePath", templatePath);
		request.setAttribute("SurveyReportBean", srb);
		return mapping.findForward("surveyReport");
	}
}