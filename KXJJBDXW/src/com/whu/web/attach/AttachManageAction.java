/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.attach;

import java.io.PrintWriter;
import java.sql.ResultSet;
import java.util.ArrayList;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whu.tools.CheckPage;
import com.whu.tools.DBTools;
import com.whu.web.common.SystemShare;
import com.whu.web.key.KeyManageForm;

/** 
 * MyEclipse Struts
 * Creation date: 02-17-2014
 * 
 * XDoclet definition:
 * @struts.action path="/attachManageAction" name="attachManageForm" parameter="method" scope="request" validate="true"
 */
public class AttachManageAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		AttachManageForm attachManageForm = (AttachManageForm) form;
		CheckPage pageBean = new CheckPage();
		int queryPageNo = 1;// 
		int rowsPerPage = 20;// 
		pageBean.setRowsPerPage(rowsPerPage);
		if (request.getParameter("queryPageNo") != null && request.getParameter("queryPageNo") != "") {
			queryPageNo = Integer.parseInt(request.getParameter("queryPageNo"));
		}
		pageBean.setQueryPageNo(queryPageNo);
		String sql = "select * from SYS_ATTACHMENT order by ID desc";
		request.getSession().setAttribute("queryAttachSql", sql);
		pageBean.setQuerySql(sql);
		DBTools db = new DBTools();
		ResultSet rs = db.queryRs(queryPageNo, pageBean, rowsPerPage);
		ArrayList result = db.queryAttachList(rs, rowsPerPage);
		if(result.size() > 0)
		{
			attachManageForm.setRecordNotFind("false");
			attachManageForm.setRecordList(result);
			
			SystemShare.SplitPageFun(request, pageBean, 1);
		}
		else
		{
			attachManageForm.setRecordNotFind("true");
			SystemShare.SplitPageFun(request, pageBean, 0);
		}
		//根据阶段的不同跳转到不同的页面
		return mapping.findForward("init");
	}
	/**
	 * 查询和分页
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward queryMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");	
		AttachManageForm attachManageForm = (AttachManageForm) form;
		String operation = request.getParameter("operation");
		//String orderField = request.getParameter("orderField");
		//String orderDirection = request.getParameter("orderDirection");

		CheckPage pageBean = new CheckPage();
		String sql = "";
		int queryPageNo = 1;
		int rowsPerPage = 20;
		pageBean.setRowsPerPage(rowsPerPage);

		if (operation.equalsIgnoreCase("search") || operation.equalsIgnoreCase("select")) {
			String fileName = attachManageForm.getFileName();
			String uploadName = attachManageForm.getUploadName();
			String createBeginTime = attachManageForm.getCreateBeginTime();
			String createEndTime = attachManageForm.getCreateEndTime();
			String temp = "";
			if(fileName != null && !fileName.equals(""))
			{
				temp += " and FILENAME like '%" + fileName + "%'";
			}
			if(uploadName != null && !uploadName.equals(""))
			{
				temp += " and UPLOADNAME like '%" + uploadName + "%'";
			}
			if(createBeginTime != null && !createBeginTime.equals(""))
			{
				temp += " and CREATETIME >= '" + createBeginTime + "'";
			}
			if(createEndTime != null && !createEndTime.equals(""))
			{
				temp += " and CREATETIME <= '" + createEndTime + "'";
			}
			
			sql = "select * from SYS_ATTACHMENT where 1=1 " + temp + " order by ID desc";
			request.getSession().setAttribute("queryAttachSql", sql);
		}
		
		else if(operation.equalsIgnoreCase("changePage")){
			sql = (String)request.getSession().getAttribute("queryAttachSql");
			/*
			if(orderField != null && !orderField.equals(""))
			{
				//去掉默认的以ID排序，即ID desc共7个字符，然后附加上用户选择的排序字段
				sql = sql.substring(0, sql.length()-7);
				sql += orderField + " " + orderDirection;
			}
			*/
			if (request.getParameter("pageNum") != null && request.getParameter("pageNum") != "") {
				queryPageNo = Integer.parseInt(request.getParameter("pageNum"));
			}
		}
		pageBean.setQuerySql(sql);
		pageBean.setQueryPageNo(queryPageNo);
		DBTools db = new DBTools();
		ResultSet rs = db.queryRs(queryPageNo, pageBean, rowsPerPage);
		ArrayList result = db.queryAttachList(rs, rowsPerPage);
		if(result.size() > 0)
		{
			attachManageForm.setRecordNotFind("false");
			attachManageForm.setRecordList(result);
			SystemShare.SplitPageFun(request, pageBean, 1);
		}
		else
		{
			attachManageForm.setRecordNotFind("true");
			SystemShare.SplitPageFun(request, pageBean, 0);
		}
		return mapping.findForward("init");
	}
	public ActionForward delete(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		
		String ids = request.getParameter("ids");
		DBTools dbTool = new DBTools();
		boolean result = true;
		if(ids == null || ids.equals(""))
		{
			String id = request.getParameter("id");
			String path = dbTool.querySingleData("SYS_ATTACHMENT", "FILEPATH", "ID", id);
			
			result = dbTool.deleteItemReal(id, "SYS_ATTACHMENT", "ID");
			
			String dirPath = request.getSession().getServletContext().getRealPath("/");
			String filePath = dirPath + path;
			result = SystemShare.deleteFileFromDisk(filePath);
			//如果存在swf文件，则也一起删除
			filePath = filePath.substring(0, filePath.lastIndexOf("."));
			filePath = filePath + ".swf";
			result = SystemShare.deleteFileFromDisk(filePath);
		}
		else
		{
			String[] arrID = ids.split(",");
			result = dbTool.deleteItemsReal(arrID, "SYS_ATTACHMENT", "ID");
		}
		PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		if(result)
		{
			json.put("statusCode", 200);
			json.put("message", "删除成功！");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "删除失败！");
		}
		out.write(json.toString());
		out.flush();
		out.close();
		
		return null;
	}
	/**
	 * 上传附件
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws Exception
	 */
	public ActionForward upload(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		boolean result = true;
		if(result)
		{
			json.put("statusCode", 200);
			json.put("message", "上传成功！");
			json.put("callbackType", "closeCurrent");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "上传失败！");
		}
		out.write(json.toString());
		out.flush();
		out.close();
		return null;
	}
}