/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.credit;

import java.io.IOException;
import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whu.tools.DBTools;
import com.whu.web.email.ContactBean;
import com.whu.web.credit.InstituteInfo;
import com.whu.web.credit.MiscountInfo;
import com.whu.web.credit.ConfigMiscountForm;

/** 
 * MyEclipse Struts
 * Creation date: 12-02-2014
 * 
 * XDoclet definition:
 * @struts.action path="/configMiscountAction" name="configMiscountForm" parameter="method" scope="request" validate="true"
 * @struts.action-forward name="edit" path="/web/credit/editMiscount.jsp"
 */
public class ConfigMiscountAction extends DispatchAction {
	public ActionForward save(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");	

		String operation = request.getParameter("operation");
		ConfigMiscountForm configMiscountForm = (ConfigMiscountForm)form;
		String title = configMiscountForm.getTitle();
		String individual = configMiscountForm.getIndividual();
		String institute = configMiscountForm.getInstitute();
		String reportId = configMiscountForm.getReportId();
		String mistype = configMiscountForm.getMistype();
		String punish = configMiscountForm.getPunish();
		String detail = configMiscountForm.getDetail();
		String time = configMiscountForm.getTime();
		String miscountId = "";
		String[] mistypeIdArray = mistype.split(",");
		
		String timeStamp = new SimpleDateFormat("yyyyMMddHHmmss").format(new Date());;
		
		miscountId = timeStamp;
	
		DBTools dbTool = new DBTools();
		String sql = "";
		String[] params = new String[0];
		if(operation.equals("new") && !mistype.equals("")) {
			sql = "insert into TB_MISCOUNT(MISCOUNTID,TITLE,INDIID,INSTID,REPORTID,PUNISH,DETAIL,TIME) values(?, ?, ?, ?, ?, ?, ?, ?)";
			params = new String[]{miscountId, title, individual, institute, reportId, punish, detail, time};
		} 
	/*	else if(operation.equals("edit")) {
			String id = configMiscountForm.getId();
			// use update trigger delete TB_MISCOUNT_LIST before
			sql = "update TB_MISCOUNT set TITLE='" + title + "', INDIID='" + individual + "', INSTID='" + institute + "', REPORTID='" + reportId + "', PUNISH='" + punish + "', TIME='" + time + "', DETAIL='" + detail + "' where ID='" + id + "'";
		} */
	
		
		boolean result = dbTool.insertItem(sql, params) && dbTool.insertMiscountList(miscountId, mistypeIdArray);
		PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		if(result)
		{
			json.put("statusCode", 200);
			json.put("message", "保存成功！");
			json.put("callbackType", "closeCurrent");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "保存失败！");
		}
		out.write(json.toString());
		out.flush();
		out.close();
		
		return null;
		
	}
	/**
	 * 编辑信息，跳转
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException
	 */
	public ActionForward edit(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");	
		
		ConfigMiscountForm configMiscountForm = (ConfigMiscountForm)form;
		String id = request.getParameter("uid");
		DBTools dbTools = new DBTools();
		String sql = "select a.ID,a.MISCOUNTID,a.TITLE,a.REPORTID,a.TIME,a.DETAIL,b.NAME as INDI,c.NAME as INST, GROUP_CONCAT(d.RID SEPARATOR ',') as MISLIST,GROUP_CONCAT(d.RNAME SEPARATOR ',') as MISNAME, e.CAPTION as PUNISHMENT from (select * from VIEW_FULL_MISCOUNT where ID=?) as a, SYS_INDIVIDUAL_INFO b, SYS_INST_INFO c, SYS_JBREASON as d, (select CODE,CAPTION from SYS_DATA_DIC where CODENAME='ZDBZ_CLJD')as e where a.INDIID=b.PID and a.INSTID=c.CODE and a.MISTYPE=d.RID and a.PUNISH=e.CODE group by a.MISCOUNTID";
		MiscountInfo miscountInfo = dbTools.queryMiscountInfo(sql, new String[]{id});
		ArrayList result = new ArrayList();
		if(miscountInfo != null){
			result.add(miscountInfo);
			configMiscountForm.setRecordNotFind("false");
			configMiscountForm.setRecordList(result);
			
			return mapping.findForward("edit");
			
		} else {
			configMiscountForm.setRecordNotFind("true");
			return mapping.findForward("initError");
		}		
	}
	
	
	public ActionForward detail(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");	
		
		ConfigMiscountForm configMiscountForm = (ConfigMiscountForm)form;
		String id = request.getParameter("uid");
		DBTools dbTools = new DBTools();
		String sql = "select a.ID,a.MISCOUNTID,a.TITLE,a.REPORTID,a.TIME,a.DETAIL,b.NAME as INDI,c.NAME as INST, GROUP_CONCAT(d.RID SEPARATOR ',') as MISLIST,GROUP_CONCAT(d.RNAME SEPARATOR ',') as MISNAME, e.CAPTION as PUNISHMENT from (select * from VIEW_FULL_MISCOUNT where ID=?) as a, SYS_INDIVIDUAL_INFO b, SYS_INST_INFO c, SYS_JBREASON as d, (select CODE,CAPTION from SYS_DATA_DIC where CODENAME='ZDBZ_CLJD')as e where a.INDIID=b.PID and a.INSTID=c.CODE and a.MISTYPE=d.RID and a.PUNISH=e.CODE group by a.MISCOUNTID";
		
		MiscountInfo miscountInfo = dbTools.queryMiscountInfo(sql, new String[]{id});
		ArrayList result = new ArrayList();
		if(miscountInfo != null){
			result.add(miscountInfo);
			configMiscountForm.setRecordNotFind("false");
			configMiscountForm.setRecordList(result);
			
			return mapping.findForward("detail");
			
		} else {
			configMiscountForm.setRecordNotFind("true");
			return mapping.findForward("initError");
		}		
	}
}