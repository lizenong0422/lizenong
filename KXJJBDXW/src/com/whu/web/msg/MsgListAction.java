/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.msg;

import java.io.OutputStream;
import java.io.UnsupportedEncodingException;
import java.sql.ResultSet;
import java.util.ArrayList;
import java.util.List;
import java.util.Vector;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;

import com.whu.tools.CheckPage;
import com.whu.tools.DBTools;
import com.whu.tools.ExcelTools;

/**
 * MyEclipse Struts Creation date: 07-01-2013
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/msgListAction" name="queryMsgForm"
 *                input="/jsp/message/msgList.jsp" scope="request"
 *                validate="true"
 */
public class MsgListAction extends DispatchAction {
	/*
	 * Generated Methods
	 */

	public ActionForward init(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		QueryMsgForm queryMsgForm = (QueryMsgForm) form;
		CheckPage pageBean = new CheckPage();
		int queryPageNo = 1;// �����ҳ��
		int rowsPerPage = 20;// ÿҳ������
		pageBean.setRowsPerPage(rowsPerPage);
		if (request.getParameter("queryPageNo") != null && request.getParameter("queryPageNo") != "") {
			queryPageNo = Integer.parseInt(request.getParameter("queryPageNo"));
		}
		pageBean.setQueryPageNo(queryPageNo);
		String sql = "select SENDNAME,TITLE,MSGTYPE,SENDTIME,RECVTIME from TB_RECVMSG where RECVNAME='admin'";
		String[] params = new String[0];
		request.getSession().setAttribute("queryMsgSql", sql);
		request.getSession().setAttribute("queryMsgParams", params);
		pageBean.setQuerySql(sql);
		pageBean.setParams(params);
		DBTools db = new DBTools();
		ResultSet rs = db.queryRs(queryPageNo, pageBean, rowsPerPage);
		ArrayList result = db.queryRecvMsgList(rs, rowsPerPage);
		if(result.size() > 0)
		{
			queryMsgForm.setRecordNotFind("false");
			queryMsgForm.setRecordList(result);
			
			int totalRows = pageBean.getTotalRows();
			int pagecount = pageBean.getTotalPage();// �õ���ҳ��
			int currentPage = pageBean.getQueryPageNo();// �õ���ǰҳ
			request.setAttribute("pageNum",String.valueOf(currentPage));
			request.setAttribute("totalRows",String.valueOf(totalRows));
			request.setAttribute("pageCount",String.valueOf(pagecount));
		}
		else
		{
			queryMsgForm.setRecordNotFind("true");
			request.setAttribute("pageNum",String.valueOf(0));
			request.setAttribute("totalRows",String.valueOf(0));
			request.setAttribute("pageCount",String.valueOf(0));
		}
		return mapping.findForward("init");
	}

	public ActionForward queryMsg(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws Exception {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");	
		QueryMsgForm queryMsgForm = (QueryMsgForm) form;
		String operation = request.getParameter("operation");
		
		CheckPage pageBean = new CheckPage();
		String sql = "";
		String[] params = new String[0];
		int queryPageNo = 1;
		int rowsPerPage = 20;
		pageBean.setRowsPerPage(rowsPerPage);
		
		//�������ѯ��
		if (operation.equalsIgnoreCase("search")) {
			String title = queryMsgForm.getTitle();
			String msgType = queryMsgForm.getMsgType();
			String revBeginTime = queryMsgForm.getRevBeginTime();
			String revEndTime = queryMsgForm.getRevEndTime();
			if(title.equals("") && msgType.equals("allType") && revBeginTime.equals("") && revEndTime.equals("")){
				sql = "select SENDNAME,TITLE,MSGTYPE,SENDTIME,RECVTIME from TB_RECVMSG where RECVNAME='admin'";
			}
			else
			{
				sql = "select SENDNAME,TITLE,MSGTYPE,SENDTIME,RECVTIME from TB_RECVMSG where RECVNAME='admin' and TITLE=?";
				params = new String[]{title};
			}
			request.getSession().setAttribute("queryMsgSql", sql);
			request.getSession().setAttribute("queryMsgParams", params);
		}
		// ����Ƿ�ҳ
		else if(operation.equalsIgnoreCase("changePage")){
			sql = (String)request.getSession().getAttribute("queryMsgSql");
			params = (String[])request.getSession().getAttribute("queryMsgParams");
			if (request.getParameter("pageNum") != null && request.getParameter("pageNum") != "") {
				queryPageNo = Integer.parseInt(request.getParameter("pageNum"));
			}
		}
		pageBean.setQuerySql(sql);
		pageBean.setParams(params);
		pageBean.setQueryPageNo(queryPageNo);
		DBTools db = new DBTools();
		ResultSet rs = db.queryRs(queryPageNo, pageBean, rowsPerPage);
		ArrayList result = db.queryRecvMsgList(rs, rowsPerPage);
		if(result.size() > 0)
		{
			queryMsgForm.setRecordNotFind("false");
			queryMsgForm.setRecordList(result);
			
			int totalRows = pageBean.getTotalRows();
			int pagecount = pageBean.getTotalPage();// �õ���ҳ��
			int currentPage = pageBean.getQueryPageNo();// �õ���ǰҳ
			request.setAttribute("pageNum",String.valueOf(currentPage));
			request.setAttribute("totalRows",String.valueOf(totalRows));
			request.setAttribute("pageCount",String.valueOf(pagecount));
		}
		else
		{
			queryMsgForm.setRecordNotFind("true");
			
			request.setAttribute("pageNum",String.valueOf(0));
			request.setAttribute("totalRows",String.valueOf(0));
			request.setAttribute("pageCount",String.valueOf(0));
		}
		return mapping.findForward("init");
	}
	/**
	 * ������ݵ�Excel
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 */
	public ActionForward export(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) {
		DBTools db = new DBTools();
		String sql = (String)request.getSession().getAttribute("queryMsgSql");
		String[] params = (String[])request.getSession().getAttribute("queryMsgParams");
		try
		{
			String fname = "message";
			OutputStream os = response.getOutputStream();
			response.reset();
			response.setHeader("Content-disposition", "attachment;filename=" + fname + ".xls");
			response.setContentType("application/msexcel");
			ResultSet rs = db.queryRsList(sql, params);
			ExcelTools et = new ExcelTools();
			et.createSheet(rs, os);
			rs.close();
			db.closeConnection();
		}
		catch(Exception e)
		{
			System.out.println(e);
		}
		return null;
	}
}