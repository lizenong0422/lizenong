/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.whu.web.expertAndDept;

import java.io.File;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.sql.ResultSet;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import net.sf.json.JSONObject;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;
import org.apache.struts.actions.DispatchAction;
import org.apache.struts.upload.FormFile;

import com.whu.tools.CheckPage;
import com.whu.tools.DBTools;
import com.whu.tools.SystemConstant;
import com.whu.web.common.SystemShare;
import com.whu.web.eventbean.ExpertInfo;
import com.whu.web.eventbean.JDYJSBean;
import com.whu.web.role.RoleManageForm;

/** 
 * MyEclipse Struts
 * Creation date: 05-14-2014
 * 
 * XDoclet definition:
 * @struts.action path="/expertFKAction" name="expertFKForm" parameter="method" scope="request" validate="true"
 */
public class ExpertFKAction extends DispatchAction {
	/*
	 * Generated Methods
	 */
	/**
	 * 鉴定专家在线提交鉴定意见和鉴定结论
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return
	 * @throws IOException 
	 */
	public ActionForward submitAdvice(ActionMapping mapping, ActionForm form,
			HttpServletRequest request, HttpServletResponse response) throws IOException {
		response.setContentType("text/html;charset=utf-8");
		request.setCharacterEncoding("utf-8");
		ExpertFKForm expertFKForm = (ExpertFKForm)form;
		String id = expertFKForm.getJdID();
		String reportID = expertFKForm.getReportID();
		String adviceID = expertFKForm.getAdviceID();
		String jdConCount = expertFKForm.getJdConCount();
		String jdAdvice = expertFKForm.getJdAdvice();
		int count = Integer.valueOf(jdConCount);
		String tempName = "";
		String jdConclusion = "";
		if(count > 0)
		{
			for(int i = 0; i < count; i++)
			{
				tempName = request.getParameter("conclusion" + String.valueOf(i));
				jdConclusion += tempName + ",";
			}
		}
		if(!jdConclusion.equals(""))
		{
			jdConclusion = jdConclusion.substring(0, jdConclusion.length() - 1);
		}
		
		DBTools dbTools = new DBTools();
		boolean result = false;
		String expertName = dbTools.querySingleData("TB_EXPERTADVICE", "EXPERTNAME", "ID", adviceID);
		//上传附件
		String fileName = "";
		String attachName = "";
		
		String time = SystemShare.GetNowTime("yyyy-MM-dd");
		
		String filePath = request.getSession().getServletContext().getRealPath("/")+"/attachment/expert/";
		//String path1 = filePath + "temp";
		String loginName = (String)request.getSession().getAttribute("LoginName");
		String path1 = request.getSession().getServletContext().getRealPath("/") + "/temp/" + loginName + "/";
		String path2 = filePath + reportID;
		//获得服务器的IP地址路径，存放在数据库中，便于下载
		String relDirectory = "attachment/expert/" + reportID;
		//将临时文件夹中的附件转存到以警情编号为目录的文件夹下
		SystemShare.IOCopy(path1, path2, relDirectory, expertName);
		
		attachName =  (String)request.getSession().getAttribute("AdviceFKAttach");
		if(attachName != null && !attachName.equals(""))
		{
			attachName = "expert/" + reportID + "/" + attachName;
			request.getSession().setAttribute("AdviceFKAttach","");
		}
		else
		{
			attachName = "";
		}

        String sql = "update TB_EXPERTADVICE set CONCLUSION=?,ADVICE=?,TIME=?,ISFK=?,ATTACHNAME=? where ID=?";
        String[] params = new String[]{jdConclusion, jdAdvice, time, "1", attachName, adviceID};
        result = dbTools.insertItem(sql, params);
        
        if(result)
        {
        	String describe = time + ", " + expertName + "   在线提交专家鉴定意见";
			//插入处理过程到数据库中
			result = dbTools.InsertHandleProcess(reportID, expertName, SystemConstant.HP_EXPERTADVICE, SystemConstant.SS_SURVEYING, SystemConstant.LCT_ZJJD, describe);
			
        	//将该反馈消息插入到数据库中，便于在管理平台首页可以查看到该反馈消息，提醒工作人员
        	sql = "insert into TB_FKRECODER(REPORTID, TIME,TYPE,FKNAME) values(?, ?, ?, ?)";
        	params = new String[]{reportID, time, SystemConstant.REPLY_EXPERT, expertName};
        	dbTools.insertItem(sql, params);
        }

        if(result)
        {
			sql = "update TB_ED_ADVICE set ISSUBMIT='1' where ID=?";
			result = dbTools.insertItem(sql, new String[]{id});
        }
      PrintWriter out = response.getWriter();
		JSONObject json = new JSONObject();
		if(result)
		{
			json.put("statusCode", 200);
			json.put("message", "提交成功！");
			json.put("callbackType", "closeCurrent");
			json.put("navTabId", "ajjd");
		}
		else
		{
			json.put("statusCode", 300);
			json.put("message", "提交失败！");
		}
		out.write(json.toString());
		out.flush();
		out.close();
		return null;
	}
}